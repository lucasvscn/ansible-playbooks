- hosts: all,!local
  gather_facts: no
  vars:
    vault_id: dev
    vault_file: vault.yml
    vault_filepath: "{{ playbook_dir + '/' + vault_file }}"
    vault_passwd: .vault_passwd
    plain_passwd: .plain_passwd
    plain_passwd_path: "{{ playbook_dir }}"
    default_user: husker
    password_var_name: "{{ default_user + '_' + inventory_hostname }}"
  tasks:
    - name: Ensure "vault_file" exists.
      copy:
        content: "---"
        dest: "{{ playbook_dir }}/{{ vault_file }}"
        force: no
      delegate_to: localhost

    - name: Find out if we have already set a password.
      command: "grep -c \"{{ password_var_name }}\" {{ vault_file }}"
      args:
        chdir: "{{ playbook_dir }}"
      register: password_in_file
      delegate_to: localhost
      ignore_errors: true
    - debug: msg="{{ password_in_file.stdout }}"

    - name: Create a password and use ansible-vault to write it.
      when: password_in_file.stdout == "0"
      delegate_to: localhost
      block:
        - name: Create a password.
          command: "openssl rand -base64 32"
          register: new_vault_password
          no_log: true
        - name: Encrypt the new password.
          command: "ansible-vault encrypt_string --vault-id {{ vault_id }}@{{ vault_passwd }} --name \"{{ password_var_name }}\" \"{{ new_vault_password.stdout }}\""
          register: new_vault_password_encrypted
          no_log: true
        - name: Write the plain password to our local hidden file.
          lineinfile:
            path: "{{ plain_passwd_path + '/' + plain_passwd }}"
            line: "{{ password_var_name + ' ' + new_vault_password.stdout }}"
            create: yes
            insertafter: "EOF"
        - name: Write the encrypted password to our local ansible-vault file.
          lineinfile:
            path: "{{ vault_filepath }}"
            line: "{{ new_vault_password_encrypted.stdout }}"
            insertafter: "EOF"